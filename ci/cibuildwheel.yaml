trigger: none

stages:
  - stage: cibuildwheel
    condition: eq(variables['System.PullRequest.IsFork'], 'false')
    jobs:
      - job: start_linux_arm64_agent_aws
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - checkout: none
          - bash: |
              echo "buildno: $(Build.BuildId)"
              echo ${AZURE_DEVOPS_CLI_PAT} | az devops login
            env:
              AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
            displayName: "Login Azure DevOps Extension"
          - bash:
              az devops configure --defaults
              organization=$(System.TeamFoundationCollectionUri)
              project=$(System.TeamProject) --use-git-aliases true
            displayName: "Set default Azure DevOps organization and project"
          - task: LambdaInvokeFunction@1
            displayName: "Start Agent 1"
            name: "Start_Agent1"
            inputs:
              awsCredentials: "ondemand-dev"
              regionName: "eu-west-1"
              functionName: "ondemand-pipeline"
              payload: |
                {
                  "pool": "arm64",
                  "buildid": "$(Build.BuildId)"
                }
              outputVariable: "functionResult"
          - bash: |
              echo "Instance: $(functionResult)"
            name: "Display_Instance"
            displayName: "Display Instance"
          - bash: |
              echo "Starting agent... for pool arm64"
              POOLID=$(az pipelines pool list | jq '.[]| select(.name == "arm64") | .id' -r)
              while [ "$(az pipelines agent list --pool-id $POOLID | jq '.[]| select(.name == "arm64-$(Build.BuildId)") | .enabled' -r)" != "true" ]
              do
                echo "Still waiting for agent arm64-$(Build.BuildId) ... "
                sleep 3
              done
              echo "Agent found ..."
            name: "Check_agent"
            displayName: "Check agent"
            timeoutInMinutes: 20
      - job: linux_arm64
        pool:
          name: "arm64"
          vmImage:
          demands:
            - Agent.Name -equals arm64-$(Build.BuildId)
        dependsOn:
          - start_linux_arm64_agent_aws
        timeoutInMinutes: 60
        condition: eq(variables['System.PullRequest.IsFork'], 'false')
        steps:
          - checkout: self
            fetchDepth: 1
            lfs: false
            submodules: true
          # - task: UsePythonVersion@0
          - bash: |
              set -o errexit
              python3 -m pip install --upgrade pip
              pip3 install cibuildwheel==2.8.1
            displayName: Install dependencies
          - bash: cibuildwheel --output-dir wheelhouse .
            displayName: Build wheels
          - task: PublishBuildArtifacts@1
            inputs: {pathtoPublish: 'wheelhouse'}

      - job: linux_x64
        pool: {vmImage: 'ubuntu-latest'}
        timeoutInMinutes: 60
        steps:
          - task: UsePythonVersion@0
          - bash: |
              set -o errexit
              python3 -m pip install --upgrade pip
              pip3 install cibuildwheel==2.8.1
            displayName: Install dependencies
          - bash: cibuildwheel --output-dir wheelhouse .
            displayName: Build wheels
          - task: PublishBuildArtifacts@1
            inputs: {pathtoPublish: 'wheelhouse'}

      - job: macos_x64
        pool: {vmImage: 'macOS-11'}
        timeoutInMinutes: 60
        steps:
          - task: UsePythonVersion@0
          - bash: |
              set -o errexit
              python3 -m pip install --upgrade pip
              python3 -m pip install cibuildwheel==2.8.1
            displayName: Install dependencies
          - bash: cibuildwheel --output-dir wheelhouse .
            displayName: Build wheels
          - task: PublishBuildArtifacts@1
            inputs: {pathtoPublish: wheelhouse}

      - job: windows_x64
        pool: {vmImage: 'windows-2019'}
        timeoutInMinutes: 60
        steps:
          - task: UsePythonVersion@0
          - bash: |
              set -o errexit
              python -m pip install --upgrade pip
              pip install cibuildwheel==2.8.1
            displayName: Install dependencies
          - bash: cibuildwheel --output-dir wheelhouse .
            displayName: Build wheels
          - task: PublishBuildArtifacts@1
            inputs: {pathtoPublish: 'wheelhouse'}
